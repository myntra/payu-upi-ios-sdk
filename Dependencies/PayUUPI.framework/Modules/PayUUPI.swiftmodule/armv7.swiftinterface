// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.2.4 (swiftlang-1103.0.32.9 clang-1103.0.32.53)
// swift-module-flags: -target armv7-apple-ios10.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name PayUUPI
import Foundation
import PayULogger
@_exported import PayUUPI
import PayUUPICore
import Swift
import UIKit
@objc public enum PayUCollectScreenType : Swift.Int {
  case upi
  case gpayFallback
  public typealias RawValue = Swift.Int
  public init?(rawValue: Swift.Int)
  public var rawValue: Swift.Int {
    get
  }
}
@objc @_inheritsConvenienceInitializers @objcMembers public class PayCollectPaymentVC : UIKit.UIViewController {
  @objc public var availablePaymentOptions: PayUUPICore.PayUUPIPaymentOptions?
  @objc public var screenType: PayUUPI.PayUCollectScreenType
  @objc public var paymentParams: PayUUPICore.PayUPaymentParams?
  @objc override dynamic public func viewDidLoad()
  @objc override dynamic public func viewWillAppear(_ animated: Swift.Bool)
  @objc override dynamic public func viewWillDisappear(_ animated: Swift.Bool)
  @objc deinit
  @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @objc required dynamic public init?(coder: Foundation.NSCoder)
}
extension PayCollectPaymentVC : UIKit.UITableViewDelegate, UIKit.UITableViewDataSource {
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, numberOfRowsInSection section: Swift.Int) -> Swift.Int
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, cellForRowAt indexPath: Foundation.IndexPath) -> UIKit.UITableViewCell
  @objc dynamic public func numberOfSections(in tableView: UIKit.UITableView) -> Swift.Int
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, didSelectRowAt indexPath: Foundation.IndexPath)
}
@objc @_inheritsConvenienceInitializers @objcMembers public class PayUUPI : ObjectiveC.NSObject {
  @objc public class func getCollectPaymentVC() -> PayUUPI.PayCollectPaymentVC
  @objc deinit
  @objc override dynamic public init()
}
extension PayUUPI.PayUCollectScreenType : Swift.Equatable {}
extension PayUUPI.PayUCollectScreenType : Swift.Hashable {}
extension PayUUPI.PayUCollectScreenType : Swift.RawRepresentable {}
